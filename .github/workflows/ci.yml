name: CI
on:
  push:
    paths-ignore:
      - "README.md"
      - "LICENSE"
  pull_request:
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        cache: true
        cache-dependency-path: go.sum

    - name: Install dependencies
      run: go get .

    - name: Ensure gofmt
      run: test -z "$(gofmt -s -d .)"

    - name: Ensure go.mod is already tidied
      run: go mod tidy && git diff --no-patch --exit-code

    - name: Build with Goreleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --snapshot --rm-dist

    - name: Test with the Go CLI
      run: go test -coverprofile=coverage.txt -covermode count .

    - name: Generate coverage reports
      run: |
        go get github.com/boumenot/gocover-cobertura
        go build github.com/boumenot/gocover-cobertura
        go test -coverprofile=coverage.txt -covermode count .
        go tool cover -html=coverage.txt -o=coverage.html
        ./gocover-cobertura < coverage.txt > coverage.xml

    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '50 75'

    - name: Upload Go test results
      uses: actions/upload-artifact@v3
      with:
        name: go-test-coverage-report
        path: coverage.html

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md